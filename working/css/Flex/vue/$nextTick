$nextTick
Vue.nextTick()
  官方文档解释如下：
    在下次 DOM 更新循环结束之后执行延迟回调。
    在修改数据之后立即使用这个方法，获取更新后的 DOM。
  什么时候需要用的Vue.nextTick()
    你在Vue生命周期的created()钩子函数进行的DOM操作一定要放在Vue.nextTick()的回调函数中。原因是什么呢，原因是
      在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。
      与之对应的就是mounted钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。

  在数据变化后要执行的某个操作，而这个操作需要使用随数据改变而改变的DOM结构的时候，这个操作都应该放进Vue.nextTick()的回调函数中。
  原因是，Vue是异步执行dom更新的，
    为了在数据变化之后等待 Vue 完成更新 DOM ，可以在数据变化之后立即使用 Vue.nextTick(callback) 。
      这样回调函数在 DOM 更新完成后就会调用。