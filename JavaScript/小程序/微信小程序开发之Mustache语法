微信小程序开发之Mustache语法
    js开发参见https://github.com/janl/mustache.js
Mustache是一个logic-less（轻逻辑）模板解析引擎，它是为了使用户界面与业务数据（内容）分离而产生的，它可以生成特定格式的文档，通常是标准的HTML文档。当同一个模板中想要调用不同的函数来渲染画面，在已经自定义好了的前提下，可以在渲染页面时对传入的参数进行手动判断。

1. 语法
    {{keyName}}
    {{{keyName}}}
    {{#keyName}} {{/keyName}}
    {{^keyName}} {{/keyName}}
    {{.}}
    {{!comments}}
    {{>partials}}

2. 变量含有html的代码，
    如：<br>、<tr>等而不想转义，可以在用{{&name}}
    也可以用{{{ }}}代替{{&}}。

3. {{#keyName}} {{/keyName}}
    以#开始、以/结束表示区块，它会根据当前上下文中的键值来对区块进行一次或多次渲染。它的功能很强大，
        里面还可以加入类似if、foreach的功能。
    {{.}}表示枚举，用于循环输出整个数组
    {{! }}表示注释
    {{>partials}}
        以>开始表示子模块，当结构比较复杂时，我们可以使用该语法将复杂的结构拆分成几个小的子模块。
    {{{data}}}
        {{data}} 输出会将等特殊字符转译，如果想保持内容原样输出可以使用{{{}}},

4. is 属性可以使用 Mustache 语法，来动态决定具体需要渲染哪个模板：
    <template name="odd">
        <view> odd </view>
    </template>
    <template name="even">
        <view> even </view>
    </template>

    <block wx:for="{{[1, 2, 3, 4, 5]}}">
        <template is="{{item % 2 == 0 ? 'even' : 'odd'}}"/>
    </block>

    数据传入：
    <template is="xxx.tpl.wxml" data="{{arry, a1:b1,c1}}"/>
    