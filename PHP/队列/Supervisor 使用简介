Supervisor 使用简介

1.  Python 开发的 client/server 系统，可以管理和监控类 UNIX 操作系统上面的进程。它可以同时启动，关闭多个进程
    两部分组成：
        supervisord(server 部分)：主要负责管理子进程，响应客户端命令以及日志的输出等；
        supervisorctl(client 部分)：命令行客户端，用户可以通过它与不同的 supervisord 进程联系，获取子进程的状态等。
    安装
        可以直接使用 pip 安装：
            sudo pip install supervisor
        如果是 Ubuntu 系统，也可以使用 apt-get
    配置
        安装完成之后，可以运行 echo_supervisord_conf 生成默认的配置文件：
            echo_supervisord_conf > supervisord.conf
        默认的配置文件是下面这样的，但是这里有个坑需要注意，supervisord.pid 以及 supervisor.sock 是放在 /tmp 目录下，但是 /tmp 目录是存放临时文件，里面的文件是会被 Linux 系统删除的，一旦这些文件丢失，就无法再通过 supervisorctl 来执行 restart 和 stop 命令了，将只会得到 unix:///tmp/supervisor.sock 不存在的错误 。
            [unix_http_server]
            ;file=/tmp/supervisor.sock   ; (the path to the socket file)
            ;建议修改为 /var/run 目录，避免被系统删除
            [supervisord]
            ;logfile=/tmp/supervisord.log ; 日志文件(main log file;default $CWD/supervisord.log)
            ;建议修改为 /var/log 目录，避免被系统删除
            ;pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
            ;建议修改为 /var/run 目录，避免被系统删除
            pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
            ;设置启动supervisord的用户，一般情况下不要轻易用root用户来启动，除非你真的确定要这么做
            [supervisorctl]
            ; 必须和'unix_http_server'里面的设定匹配
            ;serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
            ;建议修改为 /var/run 目录，避免被系统删除
            serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

2。 命令详解
    supervisord: 初始启动Supervisord，启动、管理配置中设置的进程;
    supervisorctl stop(start, restart) xxx，停止（启动，重启）某一个进程(xxx);
    supervisorctl reread: 只载入最新的配置文件, 并不重启任何进程;
    supervisorctl reload: 载入最新的配置文件，停止原来的所有进程并按新的配置启动管理所有进程;
    supervisorctl update: 根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启;

    Supervisor是用Python写的一款应用程监控管理工具，能够启动，停止，重启死进程，提供web管理界面，XML-RPC接口及事件监听。通常我们写了一些脚本都不会带有daemon功能，而是加&或者nohub，screen什么的丢到后台去运行，同时使用corntab定时检测脚本是否存活，以便重新运行脚本。使用Supervisor可以将这些脚本，程序转为守护进程，自动重启它们；还可以监控机器的进程运行状况，输出警报等。
    Supervisor只能运行于Python 2.x的环境，但子进程可以为其他任意程序，比如Python 3，PHP等。这里使用pip来安装
        Supervisor is known to work with Python 2.4 or later but will not work under any version of Python 3.
        Supervisor has been tested and is known to run on Linux (Ubuntu 9.10), Mac OS X (10.4/10.5/10.6), and Solaris (10 for Intel) and FreeBSD 6.1. It will likely work fine on most UNIX systems.
        Supervisor will not run at all under any version of Windows.
3. Release History      // http://supervisord.org/
    Changelog
    3.3.3 (2017-07-24)
    3.3.2 (2017-06-03)
    3.3.1 (2016-08-02)
    3.3.0 (2016-05-14)
    3.2.4 (2017-07-24)
    3.2.3 (2016-03-19)
    3.2.2 (2016-03-04)
    3.2.1 (2016-02-06)
    3.2.0 (2015-11-30)
    3.1.4 (2017-07-24)
    3.1.3 (2014-10-28)
    3.1.2 (2014-09-07)
    3.1.1 (2014-08-11)
    3.1.0 (2014-07-29)
    3.0.1 (2017-07-24)
    3.0 (2013-07-30)
