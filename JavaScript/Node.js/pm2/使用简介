1. 常用命令
    npm install pm2 -g ： 全局安装。

    pm2 start app.js ： 启动服务，入口文件是app.js。

    pm2 start app.js -i [n] --name [name] ： 启动n个进程，名字命名为name。

    npm restart  [name or id] ： 重启服务。

    npm reload  [name or id] ： 和rastart功能相同，但是可以实现0s的无缝衔接；如果有nginx的使用经验，可以
    对比nginx reload指令。

    pm2 start app.js --max_memory_restart 1024M ： 当内存超过1024M时自动重启。 如果工程中有比较棘手的内
    存泄露问题，这个算是一个折中方案。

    pm2 monit ： 对服务进行监控。
    pm2 flush : pm2将保存的NodeJS的任务去掉或者修改任务再执行

2. fork与cluster启动模式
    开发环境中多以fork的方式启动，生产环境中多用cluster方式启动
        fork不支持定时重启，cluster支持定时重启。定时重启也就是配置中的cron_restart配置项。
        fork模式可以应用于其他语言，如php，python，perl，ruby，bash，coffee， 而cluster只能应用于node;
        fork不可以启动多个实例进程，cluster可以启动多个实例。
        fork不支持socket地址端口复用，cluster支持地址端口复用。
        cluster是fork的派生，cluster支持所有cluster拥有的特性；

4. pm2支持配置文件启动：
    pm2 ecosystem： 生成配置文件ecosystem.json
    pm2 startOrRestart /file/path/ecosystem.json : 通过配置文件启动服务

5. 稳定运行建议
    定时重启，应用进程运行时间久了或许总会产生一些意料之外的问题，定时可以规避一些不可测的情况；

    最大内存限制，根据观察设定合理内存限制，保证应用异常运行；

    合理min_uptime，min_uptime是应用正常启动的最小持续运行时长，超出此时间则被判定为异常启动；

    设定异常重启延时restart_delay，对于异常情况导致应用停止，设定异常重启延迟可防止应用在不可测情况下不断重启的导致重启次数过多等问题；

    设置异常重启次数，如果应用不断异常重启，并超过一定的限制次数，说明此时的环境长时间处于不可控状态，服务器异常。此时便可停止尝试，发出错误警告通知等。