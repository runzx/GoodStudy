小程序 逻辑层

1.小程序开发框架的逻辑层由 JavaScript 编写。
    逻辑层将数据进行处理后发送给视图层，同时接受视图层的事件反馈。

2.逻辑层也称之为 App Service。// 开发者写的所有代码最终将会打包成一份 JavaScript，并在小程序启动的时候运行，直到小程序销毁。类似 ServiceWorker
    增加 App 和 Page 方法，进行程序和页面的注册。
    增加 getApp 和 getCurrentPages 方法，分别用来获取 App 实例和当前页面栈。

        App() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等。
        Page() 函数用来注册一个页面。接受一个 object 参数，其指定页面的初始数据、生命周期函数、事件处理函数等。
            页面相关事件处理函数
                onPullDownRefresh: 下拉刷新
                    监听用户下拉刷新事件。
                    需要在app.json的window选项中或页面配置中开启enablePullDownRefresh。
                    当处理完数据刷新后，wx.stopPullDownRefresh可以停止当前页面的下拉刷新。
                onReachBottom: 上拉触底
                    监听用户上拉触底事件。
                    可以在app.json的window选项中或页面配置中设置触发距离onReachBottomDistance。
                    在触发距离内滑动期间，本事件只会被触发一次。
                onPageScroll: 页面滚动
                    监听用户滑动页面事件。
                    参数为 Object，包含以下字段：
                onShareAppMessage: 用户转发
                    只有定义了此事件处理函数，右上角菜单才会显示“转发”按钮
                    用户点击转发按钮的时候会调用
                    此事件需要 return 一个 Object，用于自定义转发内容
        getCurrentPages()
            用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。
                var pages = getCurrentPages()               //获取加载的页面
                var currentPage = pages[pages.length-1]    //获取当前页面的对象
                var url = currentPage.route                 //当前页面url 或： currentPage.__route__
                var options = currentPage.options           //如果要获取url中所带的参数可以查看options
        打开新页面   调用 API wx.navigateTo 或使用组件 <navigator open-type="navigateTo"/>	
        页面重定向	调用 API wx.redirectTo 或使用组件 <navigator open-type="redirectTo"/>
        页面返回    调用 API wx.navigateBack 或使用组件<navigator open-type="navigateBack">或用户按左上角返回按钮
        Tab 切换      调用 API wx.switchTab 或使用组件 <navigator open-type="switchTab"/> 或用户切换 Tab		
        重启动	        调用 API wx.reLaunch 或使用组件 <navigator open-type="reLaunch"/>
            navigateTo, redirectTo 只能打开非 tabBar 页面。
                wx.redirectTo(OBJECT)   关闭当前页面，跳转到应用内的某个页面。
                
            switchTab 只能打开 tabBar 页面。
                wx.switchTab(OBJECT)    跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面
                
            reLaunch 可以打开任意页面。

        getApp() 函数可以用来获取到小程序实例。
            App() 必须在 app.js 中注册，且不能注册多个。
            不要在定义于 App() 内的函数中调用 getApp() ，使用 this 就可以拿到 app 实例。
            不要在 onLaunch 的时候调用 getCurrentPages()，此时 page 还没有生成。
        setData() 函数用于将数据从逻辑层发送到视图层（异步），同时改变对应的 this.data 的值（同步）。
            直接修改 this.data 而不调用 this.setData 是无法改变页面的状态的，还会造成数据不一致。
            单次设置的数据不能超过1024kB，请尽量避免一次设置过多的数据。
            请不要把 data 中任何一项的 value 设为 undefined ，否则这一项将不被设置并可能遗留一些潜在问题。
            callback 是一个回调函数，在这次setData对界面渲染完毕后调用。(>=1.5)
        