

PHP 7 错误处理

不同于传统（PHP 5）的错误报告机制，现在大多数错误被作为 Error 异常抛出。
    这种 Error 异常可以像 Exception 异常一样被第一个匹配的 try / catch 块所捕获。如果没有匹配的 catch 块，则调用异常处理函数（事先通过 set_exception_handler() 注册）进行处理。 如果尚未注册异常处理函数，则按照传统方式处理：被报告为一个致命错误（Fatal Error）。
    Error 类并非继承自 Exception 类，所以不能用 catch (Exception $e) { ... } 来捕获 Error。你可以用 catch (Error $e) { ... }，或者通过注册异常处理函数（ set_exception_handler()）来捕获 Error。

Error 层次结构 ¶
    Throwable   //这不能工作在PHP5下
        Error
            ArithmeticError
                DivisionByZeroError
            AssertionError
            ParseError
            TypeError
        Exception
            ...

    例：
    try
    {
    // Code that may throw an Exception or Error.
    }
    catch (Throwable $t)
    {
    // Executed only in PHP 7, will not match in PHP 5
    }
    catch (Exception $e)
    {
    // Executed only in PHP 5, will not be reached in PHP 7
    }

set_exception_handler() 不再保证收到的一定是 Exception 对象 ¶
    抛出 Error 对象时，如果 set_exception_handler() 里的异常处理代码声明了类型 Exception ，将会导致 fatal error。
想要异常处理器同时支持 PHP5 和 PHP7，应该删掉异常处理器里的类型声明。
    如果代码仅仅是升级到 PHP7，则可以把类型 Exception 替换成 Throwable。
    <?php
    // PHP 5 时代的代码将会出现问题
    function handler(Exception $e) { ... }
    set_exception_handler('handler');

    // 兼容 PHP 5 和 7
    function handler($e) { ... }

    // 仅支持 PHP 7
    function handler(Throwable $e) { ... }
    ?>

(PHP 5, PHP 7)
    callable set_exception_handler ( callable $exception_handler ) 
        — 设置用户自定义的异常处理函数
        设置默认的异常处理程序，用于没有用 try/catch 块来捕获的异常。 
        在 exception_handler 调用后异常会中止。
        参数 ：
        exception_handler
            当一个未捕获的异常发生时所调用函数的名称。 该处理函数需要接受一个参数，该参数是一个抛出的异常对象。 PHP 7 以前的异常处理程序签名：
                void handler ( Exception $ex )
            自 PHP 7 以来，大多数错误抛出 Error 异常，也能被捕获。 Error 和 Exception 都实现了 Throwable 接口。 PHP 7 起，处理程序的签名：
                void handler ( Throwable $ex )
            也可以传递 NULL 值用于重置异常处理函数为默认值。
                注意，如果在用户回调里将 ex 参数的类型明确约束为Exception， 
                    PHP 7 中由于异常类型的变化，将会产生问题。
