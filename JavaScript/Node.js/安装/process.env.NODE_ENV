
process.env.NODE_ENV

1. windows不支持NODE_ENV=development的设置方式

    SET NODE_ENV=production

    “dev-mac”: " export NODE_ENV=development&& nodemon --harmony --use_strict index.js  -w ",
    “dev-win”: " set NODE_ENV=development&& nodemon --harmony --use_strict index.js  -w ",

    在npm script里设置NODE_ENV  可以起作用的
        "scripts": {
            "release": "set NODE_ENV=production&&grunt rtm",
            "dev": "set NODE_ENV=development&&grunt watch",
        },
    
    cross-env。
        这个迷你的包能够提供一个设置环境变量的scripts，让你能够以unix方式设置环境变量，然后在windows上也能兼容运行。
        使用方法：
            安装cross-env:npm install cross-env --save-dev
            在NODE_ENV=xxxxxxx前面添加cross-env就可以了。

        

2. *NIX 系统下规则如下：
    export NODE_ENV=production && node xxx.js  这样在当前命令行下后续的命令中读取 NODE_ENV，
        都会得到  production 值；
    如果直接使用 NODE_ENV=production node xxx.js，
        则 NODE_ENV 的有效性仅限当前命令，不会对后续命令有影响。

. webstorm 里
    Run/Debug Configurations -> Enironment variables:

