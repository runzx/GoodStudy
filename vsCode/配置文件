//  配置文件

User settings 是全局设置，任何vs Code打开的项目都会依此配置。

默认存储在:

    Windows: %APPDATA%\Code\User\settings.json
    Mac: $HOME/Library/Application Support/Code/User/settings.json
    Linux: $HOME/.config/Code/User/settings.json

Workspace settings 是本工作区的设置，会覆盖上边的配置

    存储在工作区的.vocode文件夹下。

修改默认快捷键

    File -> Preferences -> Keyboard Shortcuts

    修改keybindings.json，我的显示在这里C:\Users\Administrator\AppData\Roaming\Code\User\keybindings.json

自定义代码段 File -> 首选项－>
    例： 箭头函数() => {}
 
            "arrow function": {
                "prefix": "func",
                "body": [
                    "(${e}) => {$1}"
                ],
                "description": "arrow function"
            }
配置TypeScript环境
    首先覆盖默认ctrl + space快捷键，因为这个快捷键被输入法切换占用了
        C:\Users\Administrator\AppData\Roaming\Code\User\keybindings.json
        加入:
        // Place your key bindings in this file to overwrite the defaults
            [
            { "key": "ctrl+alt+space",            "command": "editor.action.triggerSuggest",
                                                "when": "editorTextFocus" }
            ]
    File - Open Folder 打开项目的目录
    创建 tsconfig.json
    输入{} ,在大括号中间 ctrl + alt + space （上边的自定义键盘）输入
        {
            "compilerOptions": {
                "target": "ES5",
                "module": "amd",
                "sourceMap": true
            }
        }
    可以创建.ts文件了
    配置TaskRunner Ctrl+Shift+P 输入 Configure Task Runner
    Run Task Ctrl+Shift+B

vscode-todo 显示todo列表

ctrl + p 后 输入ext install vscode-todo 可直接安装。

如何支持 PHP Smarty Template 语法

VS Code 能识别大部分主流代码文件，当需要进行关联语法设置时，可通过 Preferences -> Workspace Settings （或 User Settings）配置文件进行设置。

    例如，以下代码可以将后缀为 .tpl 的 Smarty 模板文件关联成 PHP 语法：

    "files.associations":{
        "*.tpl": "php"    
    }
如何搜索 node_modules 文件夹中的文件

VS Code 的默认搜索规则中会排除 **/.git, **/.DS_Store, **/bower_components, **/node_modules 目录，
    可以在用户配置文件（User Settings）中加入以下配置，来关闭或启用这些规则：

{
    "search.exclude": {
        "**/node_modules": false,
        "**/bower_components": true
    }
}