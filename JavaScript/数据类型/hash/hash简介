什么是Hash
    Hash，一般翻译做“散列”，也有直接音译为“哈希”的，就是把任意长度的输入（又叫做预映射， pre-image），通过散列算法，
        变换成固定长度的输出，该输出就是散列值。
        这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，而不可能从散列值来唯一的确定输入值。
        简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。
    hash就是找到一种数据内容和数据存放地址之间的映射关系。

1.  数组的特点是：寻址容易，插入和删除困难；
    而链表的特点是：寻址困难，插入和删除容易。
    那么我们能不能综合两者的特性，做出一种寻址容易，插入删除也容易的数据结构？答案是肯定的，这就是我们要提起的哈希表，哈希表有多种不同的实现方法，
        我接下来解释的是最常用的一种方法——拉链法，我们可以理解为“链表的数组”，如图：
            左边很明显是个数组，数组的每个成员包括一个指针，指向一个链表的头，当然这个链表可能为空，也可能元素很多。
                我们根据元素的一些特征把元素分配到不同的链表中去，也是根据这些特征，找到正确的链表，再从链表中找出这个元素。
            元素特征转变为数组下标的方法就是散列法。
    碰撞处理，
        一种是open hashing，也称为拉链法；
        另一种就是closed hashing，也称开地址法，opened addressing。

素数：

lwr	upr	% err	prime
25	26	10.416667	53
26	27	1.041667	97
27	28	0.520833	193
28	29	1.302083	389
29	210	0.130208	769
210	211	0.455729	1543
211	212	0.227865	3079
212	213	0.113932	6151
213	214	0.008138	12289
214	215	0.069173	24593
215	216	0.010173	49157
216	217	0.013224	98317
217	218	0.002543	196613
218	219	0.006358	393241
219	220	0.000127	786433
220	221	0.000318	1572869
221	222	0.000350	3145739
222	223	0.000207	6291469
223	224	0.000040	12582917
224	225	0.000075	25165843
225	226	0.000010	50331653
226	227	0.000023	100663319
227	228	0.000009	201326611
228	229	0.000001	402653189
229	230	0.000011	805306457
230	231	0.000000	1610612741