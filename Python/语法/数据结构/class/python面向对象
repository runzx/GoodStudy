Python 面向对象

1. 面向对象是一种抽象
    类
        群体总结与抽象
        现实世界或思维世界中的实体在计算机中的反映
        它将数据以及这些数据的操作封装在一起
        模版
    对象
        类的实例
        具体
    组织代码
2. 基本要素

3. 函数与方法 
    函数可直接调用
    方法 依附与一个对象
4.命名规则
    类：第一个字母大写，驼峰法
    函数、变量： 小写，中间用 _ 连接（下划线）

5. 构造函数
    def __init__(self):
    实例化时自动执行， 初始化类的特征（类变量赋值。。。）
    不能return 除None外的值！
6. 类变量 实例变量
    self.xxx    实例变量，和具体对象相关的

    查找顺序：
        实例变量没找到时， 会去类变量里查找同名变量
        如果类变量里没找， 会去父类 里 查找
7. 实例方法 第一参数必须： self    (显式 ： 显胜于隐！ self 代表实例而不是类！)
    调用时不用传self （类似其它语言的this.）

    实例方法内访问 类变量
        通过 类名.类变量  或  self.__class__.类变量
8. 类方法 
    1. 加 @classmethod
    2. 参数 cls   (cls是约定，也可以用别的名字)
    操作和类相关的变量， 不能访问实例变量
    调用： 类名.类方法      （也可以用 对象.类方法 ）
9. 静态方法 
    1. 加 @staticmethod
    2. 调用 
        类名.类方法      
        对象.类方法
    3. 方法内可以访问 类变量， 不能访问实例变量
    4. 可以用类方法 代替，少用！
10. 成员可见性
    约定：
        类的变量应通过 类的方法来改变， 不应在外面直接赋值！
    public 公开的
    private 私有的 以 __ 双下划线开头     （如果前后都有双下划线就成公开的public 如：__init__）
        对__abc 强制赋值， 会生成新的实例变量__abc, 因为同名私有变量在内部是： _类名__abc原
