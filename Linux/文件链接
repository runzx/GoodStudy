理解 Linux 的硬链接与软链接

1. Linux 与其他类 UNIX 系统一样并不区分文件与目录
    创建的目录的名称与现有的文件名（或目录名）重复，则会创建失败

2. 文件都有文件名与数据，这在 Linux 上被分成两个部分：用户数据 (user data) 与元数据 (metadata)。
    用户数据，即文件数据块 (data block)，数据块是记录文件真实内容的地方；
    元数据则是文件的附加属性，如文件大小、创建时间、所有者等信息。
    在 Linux 中，元数据中的 inode 号（inode 是文件元数据的一部分但其并不包含文件名，inode 号即索引节点号）才是文件的唯一标识而非文件名。文件名仅是为了方便人们的记忆和使用，系统或程序通过 inode 号寻找正确的文件数据块。

3. 查看 inode 号可使用命令 stat 或 ls -i

4. 文件的共享使用，Linux 系统引入了两种链接：
    硬链接 (hard link) 
        链接为 Linux 系统解决了文件的共享使用，还带来了隐藏文件路径、增加权限安全及节省存储等好处。
        若一个 inode 号对应多个文件名，则称这些文件为硬链接。换言之，硬链接就是同一个文件使用了多个别名（见 图 2.hard link 就是 file 的一个别名，他们有共同的 inode）。
            硬链接可由命令 link 或 ln 创建。如下是对文件 oldfile 创建硬链接。
            link oldfile newfile 
            ln oldfile newfile
        文件有相同的 inode 及 data block；
        只能对已存在的文件进行创建；
        不能交叉文件系统进行硬链接的创建；
        不能对目录进行创建，只可对文件创建；
        删除一个硬链接文件并不影响其他有相同 inode 号的文件。
        硬链接不能对目录创建
        当前目录（.）与父目录（..）。查看这两个特殊目录的 inode 号可知其实这两目录就是两个硬链接

    软链接（又称符号链接，即 soft link 或 symbolic link）
        软链接文件有类似于Windows的快捷方式。
        文件实际上是一个文本文件，其中包含的有另一文件的位置信息。
        若文件用户数据块中存放的内容是另一文件的路径名的指向，则该文件就是软连接。
            软链接就是一个普通文件，只是数据块内容有点特殊。
            软链接有着自己的 inode 号以及用户数据块（见 图 2.）。
            因此软链接的创建与使用没有类似硬链接的诸多限制：
        软链接有自己的文件属性及权限等；
        可对不存在的文件或目录创建软链接；
        软链接可交叉文件系统；
        软链接可对文件或目录创建；
        创建软链接时，链接计数 i_nlink 不会增加；
        删除软链接并不影响被指向的文件，但若被指向的原文件被删除，则相关软连接被称为死链接（即 dangling link，若被指向路径文件被重新创建，死链接可恢复为正常的软链接）。

2.通过实验加深理解
    touch f1          #创建一个测试文件f1
    ln f1 f2          #创建f1的一个硬连接文件f2
    ln -s f1 f3       #创建f1的一个符号连接文件f3
    ls -li            # -i参数显示文件的inode节点信息
    依此您可以做一些相关的测试，可以得到以下全部结论：
        1).删除符号连接f3,对f1,f2无影响；
        2).删除硬连接f2，对f1,f3也无影响；
        3).删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；
        4).同时删除原文件f1,硬连接f2，整个文件会真正的被删除。
