
配置文件： 
    在database.php中设置自动写入时间戳为true，默认是false。这里就可以和前面的时间戳数据类型对应。
        // 自动写入时间戳字段
        'auto_timestamp'  => true,
模型中使用：
    use traits\model\SoftDelete;
    class User extends Model
    {
        use SoftDelete;
        protected   $deleteTime = 'delete_time';    //必须
        protected   $updateTime = false;            //必须 关闭数据库更新操作的记录，默认是开启的。
    }
2、 CURD操作。 
    软删除
        withTrashed（）//不管是不是在回收站中都遍历 
        onlyTrashed（）//只遍历在回收站中的数据 

恢复软删除
    1.  原生SQL
        use think\Db;
        ...
        Db::table($table_prefix.'follower')->where('openid', $openid)->->update(['delete_time' => ['exp', 'null']]);
        ...
    2.  使用::withTrashed()和::onlyTrashed()都可以， 不能直接赋值NULL 给 update save，因为如果你直接赋值 (PHP)NULL，这个值就会被认为无效而被忽略， 不会对数据库的这个字段进行操作。
        ...
        $user =  Follower::onlyTrashed()->where('openid', $openid);
        $user->update(['delete_time' => ['exp', 'null']]);