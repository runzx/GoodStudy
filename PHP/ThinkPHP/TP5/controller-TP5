TP5 controller 类

1. 继承了think\Controller类的话，可以直接调用
    think\View
    think\Request类的方法
2. 渲染输出
    默认情况下，控制器的输出全部采用return的方式，无需进行任何的手动输出，系统会自动完成渲染内容的输出。
3. 输出转换
    默认情况下，控制器的返回输出不会做任何的数据处理，但可以设置输出格式，并进行自动的数据转换处理，前提是控制器的输出数据必须采用return的方式返回。

    // 默认输出类型
    'default_return_type'   => 'json',
4. 继承了\think\Controller类
    控制器初始化
        可以定义控制器初始化方法_initialize，在该控制器的方法调用之前首先执行。
    前置操作
        设置 beforeActionList属性可以指定某个方法为其他方法的前置操作
        protected $beforeActionList = [
                'first',
                'second' =>  ['except'=>'hello'],
                'three'  =>  ['only'=>'hello,data'],
        ];
    跳转和重定向
        内置了两个跳转方法success和error，用于页面跳转提示。
        if($result){
            //设置成功后跳转页面的地址，默认的返回页面是$_SERVER['HTTP_REFERER']
            $this->success('新增成功', 'User/list');
        } else {
            //错误页面的默认跳转页面是返回前一页，通常不需要设置
            $this->error('新增失败');
        }
        success和error方法都可以对应的模板，默认的设置是两个方法对应的模板都是：
            THINK_PATH . 'tpl/dispatch_jump.tpl'
        重定向: 
            //重定向到News模块的Category操作
            $this->redirect('News/category', ['cate_id' => 2]);
    控制器验证, validate方法(模型里也可用)
        $result = $this->validate(
        [
            'name'  => 'thinkphp',
            'email' => 'thinkphp@qq.com',
        ],
        [
            'name'  => 'require|max:25',
            'email'   => 'email',
        ]);


