TP _initialize
0. 其实这个函数不是原生php含有的，而是一个TP自己定义的一个函数

1、__initialize()不是php类中的函数，php类的构造函数只有__construct().
2、类的初始化：子类如果有自己的构造函数（__construct()）,则调用自己的进行初始化，如果没有，则调用父类的构造函数进行自己的初始化。
3、当子类和父类都有__construct()函数的时候，如果要在初始化子类的时候同时调用父类的__constrcut()，则可以在子类中使用parent::__construct().
4、所以，ThinkPHP中的__initialize()的出现只是方便程序员在写子类的时候避免频繁的使用parent::__construct()，同时正确的调用框架内父类的构造器，所以，我们在ThnikPHP中初始化子类的时候要用__initialize(),而不用__construct(),当然你也可以通过修改框架将__initialize()函数修改为你喜欢的函数名。
5. 注意，_ _construct这里是双划线，而_initialize()函数是单划线。
    _initialize()函数的出现是为了我们可以在子类中同时调用父类与子类的构造函数。
    如果_initialize()和__construct()同时出现的话，那么_initialize()将会无效，因为此时__construct()已经重写，不再调用_initialize()。
    _initialize()函数是在“任何”方法调用之前都要调用的，也就是说如果存在_initialize()函数，调用对象的任何方法都会导 致_initialize()函数的自动调用，
    而_ _construct构造函数仅仅在创建对象的时候调用一次，跟其它方法调用没有关系。

void __construct ([ mixed $args [, $... ]] )
    PHP 5 允行开发者在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。
    如果子类中定义了构造函数则不会隐式调用其父类的构造函数。要执行父类的构造函数，需要在子类的构造函数中调用 parent::__construct()。如果子类没有定义构造函数则会如同一个普通的类方法一样从父类继承（假如没有被定义为 private 的话）。
