
1.  1.0.0--1.0.xx
    {
        "require": {
            "monolog/monolog": "1.0.*"
        }
    }
    通配符	1.0.*	你可以使用通配符*来指定一种模式。
        1.0.*与>=1.0,<1.1是等效的。
    范围	>=1.0 >=1.0,<2.0 >=1.0,<1.1|>=1.2
        你可以定义多个范围，用逗号隔开，这将被视为一个逻辑AND处理。一个管道符号|将作为逻辑OR处理。 
        AND 的优先级高于 OR。
    ~ 最好用例子来解释： 
        ~1.2 相当于 >=1.2,<2.0
        ~5.0.0 相当于 >=5.0.0,<5.1     //TP5改用这， 原来^5.0会升级成5.1


请提交你应用程序的 composer.lock （包括 composer.json）到你的版本库中
    这是非常重要的，因为 install 命令将会检查锁文件是否存在，如果存在，它将下载指定的版本（忽略 composer.json 文件中的定义）。
    这意味着，任何人建立项目都将下载与指定版本完全相同的依赖。你的持续集成服务器、生产环境、你团队中的其他开发人员、每件事、每个人都使用相同的依赖，从而减轻潜在的错误对部署的影响。
    如果不存在 composer.lock 文件，Composer 将读取 composer.json 并创建锁文件。
这意味着如果你的依赖更新了新的版本，你将不会获得任何更新。
    此时要更新你的依赖版本请使用 update 命令。这将获取最新匹配的版本（根据你的 composer.json 文件）并将新版本更新进锁文件。
