JavaScript 开发规范（一）： 命名与注释规范详解

ECMAScript 规范中标识符采用驼峰大小写格式

1.1 变量
命名方法：小驼峰式命名法。

命名规范：前缀应当是名词。(函数的名字前缀为动词，以此区分变量和函数)

命名建议：尽量在变量名字中体现所属类型，如:length、count等表示数字类型；而包含name、title表示为字符串类型。
  // 好的命名方式
  let maxCount = 10;

1.2 常量
命名方法：名称全部大写。

命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。
  const MAX_COUNT = 10;

1.3 函数
命名方法：小驼峰式命名法。

命名规范：前缀应当为动词。

命名建议：可使用常见动词约定
动词	含义	返回值
can	  判断是否可执行某个动作(权限)	函数返回一个布尔值。true：可执行；false：不可执行
has	  判断是否含有某个值	函数返回一个布尔值。true：含有此值；false：不含有此值
is	  判断是否为某个值	函数返回一个布尔值。true：为某个值；false：不为某个值
get	  获取某个值	函数返回一个非布尔值
set	  设置某个值	无返回值、返回是否设置成功或者返回链式对象
load	加载某些数据	无返回值或者返回是否加载完成的结果

1.4 类 & 构造函数
命名方法：大驼峰式命名法，首字母大写。

命名规范：前缀为名称。
class Person {}

1.5 类的成员
类的成员包含：

公共属性和方法：跟变量和函数的命名一样。

私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。

2.1 行内注释
// 用来显示一个解释的评论
// -> 用来显示表达式的结果，
// >用来显示 console 的输出结果，

2.4 函数(方法)注释
/** 
* 函数说明 
* @关键字 
*/
注释名	  语法	    含义	示例
@param	  @param    参数名 {参数类型} 描述信息	描述参数的信息	@param name {String} 传入名称
@return	  @return   {返回类型} 描述信息	描述返回值的信息	@return {Boolean} true:可执行;false:不可执行
@author	  @author   作者信息 [附属信息：如邮箱、日期]	描述此函数作者的信息	@author 张三 2015/07/21
@version	@version  XX.XX.XX	描述此函数的版本号	@version 1.0.3
@example	@example  示例代码	演示函数的使用	@example setTitle(‘测试’)

