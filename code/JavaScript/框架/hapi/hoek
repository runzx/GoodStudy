存储特定于hapi的方法的核心, 类似于lodash
    https://github.com/hapijs/hoek/blob/master/API.md
1. Error
    hoek.assert(condition, message)
        您也可以传递一个已经创建的Error对象作为第二个参数，并且assert会抛出该对象。
    当走入断言时，如果condition返回为false时，就会抛出具体的错误。
    
    断言的好处是可以方便我们调试错误，我们不可能去console每一处错误，js也做不到抛出足够清晰的错误。当我们需要对一些方法进行批量测试的时候，断言就是一个不错的方式。这就是你之前所说的，单元测试相关的问题。同理，自动化测试也可以用断言，去判断我们需要检查的接口和方法是否正确，来进行测试定位。但同样，断言是只能用于调试阶段（上线不能抛出错误吧），而且也是以牺牲了很大的效率来进行的。程序的任何功能都不能依赖于断言（就是正常情况下，断言全部删除对程序完全没有影响），而调试过程中，断言会影响程序的连贯性，这些大概是你所说的少用为好的原因。一般不是单测或是书写测试相关的代码，前端是没人会用断言的吧…
