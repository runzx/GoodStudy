//      THPNKPHP 3.1 快速入门－ 基础

1. 目录结构：
    ├─ThinkPHP.php     框架入口文件
    ├─Common 框架公共文件
    ├─Conf 框架配置文件
    ├─Extend 框架扩展目录
    ├─Lang 核心语言包目录
    ├─Lib 核心类库目录
    │  ├─Behavior 核心行为类库
    │  ├─Core 核心基类库
    │  ├─Driver 内置驱动
    │  │  ├─Cache 内置缓存驱动
    │  │  ├─Db 内置数据库驱动
    │  │  ├─TagLib 内置标签驱动
    │  │  └─Template 内置模板引擎驱动
    │  └─Template 内置模板引擎
    └─Tpl 系统模板目录
2. 入口文件
    创建一个index.php文件，添加一行简单的代码：
        <?php
        require '/ThinkPHP框架所在目录/ThinkPHP.php';
3. 项目目录，    自动生成了项目目录，目录结构如下：
    ├─index.php     项目入口文件
    ├─Common 项目公共文件目录
    ├─Conf 项目配置目录
    ├─Lang 项目语言目录
    ├─Lib 项目类库目录
    │  ├─Action Action类库目录
    │  ├─Behavior 行为类库目录
    │  ├─Model 模型类库目录
    │  └─Widget Widget类库目录
    ├─Runtime 项目运行时目录
    │  ├─Cache 模板缓存目录
    │  ├─Data 数据缓存目录
    │  ├─Logs 日志文件目录
    │  └─Temp 临时缓存目录
    └─Tpl 项目模板目录

    指定目录、入口
        <?php
        define('APP_NAME','app');
        define('APP_PATH','./app/');
        require '/ThinkPHP框架所在目录/ThinkPHP.php';
4. 调试模式
    开启调试模式很简单，我们只需要在入口文件的开头加上一行常量定义代码：
    <?php
    define('APP_DEBUG',TRUE);                       // 开启调试模式
    require '/ThinkPHP框架所在目录/ThinkPHP.php';
5. 配置， 独立的配置文件（位于项目目录的Conf/config.php），采用PHP返回数组的方式
    // 项目配置文件
    return array(
        '配置参数'     => '配置值', 
        // 更多配置参数
        //...
    );
6. 控制器， 命名规范是：
    模块名.Action.class.php （模块名采用驼峰法并且首字母大写）
    系统的默认模块是Index，对应的控制器就是项目目录下面的Lib/Action/IndexAction.class.php，类名和文件名一致。

    class IndexAction extends Action {
        public function index(){
            echo 'hello,world!';
        }
    }           //控制器必须继承Action类
7. URL请求,
    1) PATHINFO模式:  
        http://localhost/app/index.php/Index/index
        http://localhost/app/index.php/module/action/var/value/
    2) 普通模式:
        http://localhost/app/?m=module&a=action&var=value
    3) REWRITE模式：
        http://localhost/app/module/action/var/value/
        
        重写规则的支持:
        <IfModule mod_rewrite.c>
        RewriteEngine on
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]
        </IfModule>
    4) 兼容模式：是用于不支持PATHINFO的特殊环境, 兼容模式配合Web服务器重写规则的定义，可以达到和REWRITE模式一样的URL效果
        http://localhost/app/?s=/module/action/var/value/


8. 视图
    系统默认的定位规则，其定义规范是 Tpl/模块名/操作名.html
    Index模块的index操作的默认模板文件位于项目目录下面的Tpl/Index/index.html。
    例如：
        <html>
        <head>
        <title>hello {$name}</title>
        </head>
        <body>
            hello, {$name}!
        </body>
        </html>
    要输出视图，必须在控制器方法中进行模板渲染输出操作，
    例如：
        class IndexAction extends Action {
            public function index(){ 
                $this->name = 'thinkphp'; // 进行模板变量赋值
                $this->display();
            }
        }
    display方法中我们没有指定任何模板，所以按照系统默认的规则输出了Index/index.html模板文件。
        http://localhost/app/
        浏览器中会输出
            hello,thinkphp!
9. 读取数据
    配置数据库：
        'DB_DSN' => 'mysql://root@localhost:3306/thinkphp'      //方法2 简化配置参数： 数据库类型://用户名:密码@数据库地址:数据库端口/数据库名

    实例化：
        $Data = M('Data');              // 实例化Data数据模型，可以理解为M方法是直接在操作底层的Model类，而Model类具备基本的CURD操作方法。
        $this->data = $Data->select();