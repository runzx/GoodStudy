PHP_SELF，SCRIPT_NAME，SCRIPT_FILENAME，PATH_INFO，REQUEST_URI的区别

PHP的$_SERVER数组中存在五个和路径相关的变量：
    PHP_SELF，SCRIPT_NAME，SCRIPT_FILENAME，PATH_INFO，REQUEST_URI

测试结果,(请求 http://example.com/test/test.php?k=v)
    PHP_SELF: 当前所执行的脚本的文件名，这个值是相对于根目录来说。
        /test/test.php。

    SCRIPT_NAME： 当前执行的脚本的路径。
        /test/test.php。这个变量是在CGI/1.1中定义的。

    SCRIPT_FILENAME： 当前执行的脚本的绝对路径。
        /var/www/test/test.php。
        注意：如果一个脚本以相对路径，CLI方式来执行，例如../test/test.php，那么
            $_SERVER['SCRIPT_FILENAME']的值为相对路径，即../test/test.php。

    PATH_INFO：客户端提供的路径信息，即在实际执行脚本后面尾随的内容，但是会去掉Query String。
        如果请求http://example.com/test/test.php/a/b?k=v
        /a/b。
            CGI1.1标准中如下描述：”The PATH_INFO string is the trailing part of thecomponent of the script URI that follows the SCRIPT_NAME part of the path.”

    REQUEST_URI：包含HTTP协议中定义的URI内容。
        /test/test.php?k=v

区别  访问  http://example.com/test/test.php/a/b?k=v
    PHP_SELF VS SCRIPT_NAME：
        PHP_SELF和SCRIPT_NAME的值在大部分情况下都是一样的
        PHP_SELF    为    /test/test.php/a/b，
        SCRIPT_NAME 为    /test/test.php，
        可以看出PHP_SELF 比SCRIPT_NAME多了PATH_INFO的内容。

    REQUEST_URI VS SCRIPT_NAME：
        REQUEST_URI 为   /test/test.php?k=v
        SCRIPT_NAME 为   /test/test.php
        可以看出REQUEST_URI 比 SCRIPT_NAME多了 Query String。
        如果http://example.com/test/test.php在服务器端做了rewrite：
            rewrite /test/test.php /test/test2.php;
        那么REQUEST_URI   为     /test/test.php
            SCRIPT_NAME   为     /test/test2.php。


    $_SERVER['SCRIPT_NAME'] 获得的是当前程序的目录和文件名
    $_SERVER['PATH_INFO']   获得的是.php以后至?号之前的路径
    $_SERVER['PHP_SELF']    等于$_SERVER['SCRIPT_NAME'] + $_SERVER['PATH_INFO']
    $_SERVER['QUERY_STRING']是?之后的所有参数字符串
    $_SERVER['REQUEST_URI'] 是整个url路径，可以行于以下2种：
        $_SERVER['SCRIPT_NAME'] + $_SERVER['PATH_INFO'] + $_SERVER['QUERY_STRING']
        $_SERVER['PHP_SELF'] + $_SERVER['QUERY_STRING']