查询数组:
    Model.find({'array':10} );
    查询 array(数组类型)键中有10的文档,  array : [1,2,3,4,5,10]  会匹配到

    Model.find({'array[5]':10} );
    查询 array(数组类型)键中下标5对应的值是10,  array : [1,2,3,4,5,10]  会匹配到

  '$all' 匹配数组中多个元素
    Model.find({'array':[5,10]} );
    查询 匹配array数组中 既有5又有10的文档

  '$size' 匹配数组长度
    Model.find({'array':{"$size" : 3} } );
    查询 匹配array数组长度为3 的文档

  '$slice' 查询子集合返回
    Model.find({'array':{"$skice" : 10} } );
    查询 匹配array数组的前10个元素

    Model.find({'array':{"$skice" : [5,10] } } );
    查询 匹配array数组的第5个到第10个元素

  数组值中至少一个元素满足所有指定的匹配条件:
  Product.find({skus:{$elemMatch:{sku_id:4}}})
  
  语法：  { <field>: { $elemMatch: { <query1>, <query2>, ... } } }
		说明：  如果查询为单值查询条件，即只有<query1>，则无需指定$elemMatch
    db.getCollection('products').find({"skus.sku_id":4})
      这里得用"",不能用{skus.sku_id:4} !

  .find({ results: { $elemMatch: { $gte: 80, $lt: 85 } } })