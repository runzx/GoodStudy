
Docker中的数据可以存储在类似于虚拟机磁盘的介质中，在Docker中称为数据卷(Data Volume)。
    数据卷可以用来存储Docker应用的数据，也可以用来在Docker容器间进行数据共享。
    数据卷呈现给Docker容器的形式就是一个目录，支持多个容器间共享，修改也不会影响镜像。
    使用Docker的数据卷，类似在系统中使用mount 挂载一个文件系统。
创建数据卷
    利用docker run创建容器时, 添加-v参数, 就可以创建并挂载一个到多个数据卷到当前运行的容器中，
        -v参数的作用是将宿主机的一个目录作为容器的数据卷挂载到容器中，
        使宿主机和容器之间可以共享一个目录，如果本地路径不存在，Docker也会自动创建。
    # 分别将两个目录挂载到新创建的data容器上
        docker run -t -i --name data -v /tmp/data1:/data1 -v /tmp/data2:/data2 ubuntu /bin/bash
         -v 参数可以使用多次，并挂在多个数据卷到容器中。
         宿主机的本地目录 ：容器中的挂载目录
    #以只读的方式挂载到data容器上
        docker run -t -i --name data -v /tmp/readonlydata:/rodata:ro ubuntu /bin/bash
数据卷容器共享数据
    要在多个容器间共享数据，并希望永久保存这些数据，最好的方式是使用数据卷容器，类似于一个提供网络文件共享服务的NFS服务器。
    只需要指定宿主机的一个文件夹作为数据卷即可，使用docker create命令创建但不启动数据卷容器,
    其他使用该数据卷容器的容器创建时候需要使用--volumes-from参数，指定该容器名称或ID,

数据卷备份
    1.创建一个新的容器
    2.挂载数据卷容器
    3.挂载宿主机本地目录作为数据卷
    4.将数据卷容器的内容备份到宿主机本地目录挂载的数据卷中
    5.完成备份操作后容器销毁
    docker run --rm --volumes-from sharedb -v /tmp/backup:/backup ubuntu tar cvf /backup/sharedb.tar /sharedb
        --rm 容器退出后是否自动删除 