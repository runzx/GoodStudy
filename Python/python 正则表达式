python 正则表达式

1. 是特殊字符序列， 一个字符串是否与我们设定的这样的字符序列相匹配
    快速检索文本、实现替换文本操作

2. python 内置函数
    str.index('abc')> -1  包含'abc'
    'abc' in srt 
3. 
    import re
    a = '.sd asdasd'
    res = re.findall('正则表达式',a)     #返回列表
    正则强项1： 对规则的检索
                抽象的检索
4. 正则表达式 组成
    普通字符
    元字符     \n \d
        字符集 [abc] [a-d] [^abc]
        概括字符集   \d 相当于[0-9]，  \D 相当于[^0-9]
                    \w 字母和数字_, 单词字符，等价于[A-Za-z0-9_]  \W 非 包括 空格、& 、\n...
                    \s 空白字符 等价于[\f\n\r\t\v]     
                        \v 匹配一个垂直制表符。等价于 \x0b 和 \cK。
                        \f 匹配一个换页符。等价于 \x0c 和 \cL
        数量词 {n} {n,m}前面字符重复的次数(逗号和两个数之间不能有空格),最小n,最大m
            1）贪婪与 非贪婪
                默认 贪婪匹配方式， 尽可能多匹配，取最大值
                非贪婪 数量词后加?
            2）匹配0次、1次或无限多次
                *   0次或多次
                +   1次或多次
                ?   0次或1次 
            3) 组
                ()          # []里的字符是or或关系， ()里字符是and且关系
