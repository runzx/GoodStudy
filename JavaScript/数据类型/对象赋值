
javascript的一切实例都是对象， 分2类
    原始类型对象
        字符串（String）、数值（Number）、布尔值（Boolean）
    合成类型对象
        数组（Array）、对象（Object）、函数（Function）

    最大差别是复制克隆的差别。
        普通对象存储的是对象的实际数据，
        引用对象存储的是对象的引用地址，而把对象的实际内容单独存放，因为引用对象通常比较庞大，这是数据开销和内存开销优化的手段。通常初学者很难理解这部分内容，就像对象的原型一样，也是同一个概念。
            对象的原型也是引用对象，把原型的方法和属性放在单独内存当中，而对象的原型链则指向这个内存地址。尽管这部分内容比较拗口复杂，那其中的原理都是一致的，目的也一致。
        数组的克隆
            var x=[1,2];
            var y=x;
            修改了克隆数组y，但也同时修改了原始数组x，这就是引用对象的特点
        对象的克隆
            和数组的克隆同理
            完整的对象克隆又称为深度对象克隆、对象的深度克隆、对象的深度复制等等
                包括对象的值如是一个对象也要进行完整克隆（深度克隆）。
            
        函数的克隆
            使用“=”符号就可以了，并且在改变克隆后的对象，不会影响克隆之前的对象，因为克隆之后的对象会单独复制一次并存储实际数据的，
            是真实的克隆。
        