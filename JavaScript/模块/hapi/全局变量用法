
1. node 全局变量
    global 在服务器运行期间 一直存在！ 所以修改会让其它访问者 共享到， 
    和PHP不同，php每次访问其所有状态都初始化，

2. haip server.setting.app.xxx 也是在服务器运行期间存在，前后访问者共享！
    要想只让本访问者本次访问期间共享， 可能得到变量挂到 request 上？？？
        在handler里
            handler: (req, reply)=>{
                req.share = 'test';

                console.log('global.zxSum :',req.server.settings.app.test++);
                reply( {'req.server.settings.app.test': req.server.settings.app.test})
            }
    zx: UserToken 只能在handler里 =  new UserToken(req.payload); 把req传入构造函数里为这次访问生成相应的数据。


3. 不能全局变量，也不能局部变量，包括把变量封装形式，而是应该基于请求变量。每个请求保存一个数据库连接，否则一个连接服务多个请求，会冲突。前面的回答都没考虑冲突问题。???
    如果要共享，可以用共享内存，如果要夸机器共享，可以用memcache，redis。
    另外一个局部变量，不是”临时”的，可能是永久的。
        比如
            var cnt=0;
            function a(){cnt++}
        worker启动之后编译运行，首次运行之后，就不会重新编译(lua是这样的，js我想应该一样)，这个跟客户端是不一样的。
    还有一种变量是请求相关，就是每次http请求，会有一份相关的数据，同一个请求这个数据是一样的。比如要存放登录的用户名，从session读取之后，存到这里，
        可以保证这个http请求过程中用户名记录都是对的。
        放全局变量，局部变量，都可能冲突。

    
     NodeJS中数据库连接一定要引入连接池啊，自动重连啊。一般的ORM都提供的，或者单独引入一个pool管理的库（例如：generic-pool 可以管理很多种数据库甚至redis之类的连接池）。

    js 把对象变量当参数传递时， 其实也只是传了参数的值，就是指向对象的地址。
        所以对函数外的对象，函数内如作修改， 一样是会影响外面的对象！！！