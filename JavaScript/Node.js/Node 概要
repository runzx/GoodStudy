中文同步文档
    http://nodejs.cn/api/

1. 同一台机器，同时安装多个版本的node.js，就需要用到版本管理工具nvm
    git clone https://github.com/creationix/nvm.git ~/.nvm
    source ~/.nvm/nvm.sh

2. 异步 及 回调
    Node约定，
        如果某个函数需要回调函数作为参数，则回调函数是最后一个参数。
        回调函数本身的第一个参数，约定为上一步传入的错误对象。

3. 全局对象和全局变量
    global：表示Node所在的全局环境，类似于浏览器的window对象。需要注意的是，如果在浏览器中声明一个全局变量，实际上是声明了一个全局对象的属性，比如var x = 1等同于设置window.x = 1，但是Node不是这样，至少在模块中不是这样（REPL环境的行为与浏览器一致）。在模块文件中，声明var x = 1，该变量不是global对象的属性，global.x等于undefined。这是因为模块的全局变量都是该模块私有的，其他模块无法取到。
    process：该对象表示Node所处的当前进程，允许开发者与该进程互动。
    console：指向Node内置的console模块，提供命令行环境中的标准输入、标准输出功能。
    __filename：指向当前运行的脚本文件名。
    __dirname：指向当前运行的脚本所在的目录。
    全局函数：
        setTimeout()：   用于在指定毫秒之后，运行回调函数。实际的调用间隔，还取决于系统因素。间隔的毫秒数在1毫秒到2,147,483,647毫秒（约24.8天）之间。如果超过这个范围，会被自动改为1毫秒。该方法返回一个整数，代表这个新建定时器的编号。
        clearTimeout()： 用于终止一个setTimeout方法新建的定时器。
        setInterval()：  用于每隔一定毫秒调用回调函数。由于系统因素，可能无法保证每次调用之间正好间隔指定的毫秒数，但只会多于这个间隔，而不会少于它。指定的毫秒数必须是1到2,147,483,647（大约24.8天）之间的整数，如果超过这个范围，会被自动改为1毫秒。该方法返回一个整数，代表这个新建定时器的编号。
        clearInterval()：终止一个用setInterval方法新建的定时器。
        require()：      用于加载模块。
        Buffer()：       用于操作二进制数据。
4. 核心模块 (不用安装就可以使用, 源码都在Node的lib子目录中。为了提高运行速度，它们安装时都会被编译成二进制文件。)
    http：提供HTTP服务器功能。
    url：解析URL。
    fs：与文件系统交互。
    querystring：解析URL的查询字符串。
    child_process：新建子进程。
    util：提供一系列实用小工具。
    path：处理文件路径。
    crypto：提供加密和解密功能，基本上是对OpenSSL的包装。
5. 异常
    使用throw语句抛出一个错误对象，即抛出异常。
    将错误对象传递给回调函数，由回调函数负责发出错误。
    通过EventEmitter接口，发出一个error事件。

    uncaughtException事件：
        当一个异常未被捕获，就会触发uncaughtException事件，可以对这个事件注册回调函数，从而捕获异常。
            但异常发生的上下文已经丢失，无法给出异常发生的详细信息。而且，异常可能导致Node不能正常进行内存回收，出现内存泄露。
                所以，当uncaughtException触发后，最好记录错误日志，然后结束Node进程。
    unhandledRejection事件：
        用来监听没有捕获的Promise对象的rejected状态。